// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo/v7 (interfaces: EventsService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	context "context"
	reflect "reflect"

	scalingo "github.com/Scalingo/go-scalingo/v7"
	gomock "github.com/golang/mock/gomock"
)

// MockEventsService is a mock of EventsService interface.
type MockEventsService struct {
	ctrl     *gomock.Controller
	recorder *MockEventsServiceMockRecorder
}

// MockEventsServiceMockRecorder is the mock recorder for MockEventsService.
type MockEventsServiceMockRecorder struct {
	mock *MockEventsService
}

// NewMockEventsService creates a new mock instance.
func NewMockEventsService(ctrl *gomock.Controller) *MockEventsService {
	mock := &MockEventsService{ctrl: ctrl}
	mock.recorder = &MockEventsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventsService) EXPECT() *MockEventsServiceMockRecorder {
	return m.recorder
}

// EventCategoriesList mocks base method.
func (m *MockEventsService) EventCategoriesList(arg0 context.Context) ([]scalingo.EventCategory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EventCategoriesList", arg0)
	ret0, _ := ret[0].([]scalingo.EventCategory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EventCategoriesList indicates an expected call of EventCategoriesList.
func (mr *MockEventsServiceMockRecorder) EventCategoriesList(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EventCategoriesList", reflect.TypeOf((*MockEventsService)(nil).EventCategoriesList), arg0)
}

// EventTypesList mocks base method.
func (m *MockEventsService) EventTypesList(arg0 context.Context) ([]scalingo.EventType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EventTypesList", arg0)
	ret0, _ := ret[0].([]scalingo.EventType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EventTypesList indicates an expected call of EventTypesList.
func (mr *MockEventsServiceMockRecorder) EventTypesList(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EventTypesList", reflect.TypeOf((*MockEventsService)(nil).EventTypesList), arg0)
}

// EventsList mocks base method.
func (m *MockEventsService) EventsList(arg0 context.Context, arg1 string, arg2 scalingo.PaginationOpts) (scalingo.Events, scalingo.PaginationMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EventsList", arg0, arg1, arg2)
	ret0, _ := ret[0].(scalingo.Events)
	ret1, _ := ret[1].(scalingo.PaginationMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// EventsList indicates an expected call of EventsList.
func (mr *MockEventsServiceMockRecorder) EventsList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EventsList", reflect.TypeOf((*MockEventsService)(nil).EventsList), arg0, arg1, arg2)
}

// UserEventsList mocks base method.
func (m *MockEventsService) UserEventsList(arg0 context.Context, arg1 scalingo.PaginationOpts) (scalingo.Events, scalingo.PaginationMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserEventsList", arg0, arg1)
	ret0, _ := ret[0].(scalingo.Events)
	ret1, _ := ret[1].(scalingo.PaginationMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UserEventsList indicates an expected call of UserEventsList.
func (mr *MockEventsServiceMockRecorder) UserEventsList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserEventsList", reflect.TypeOf((*MockEventsService)(nil).UserEventsList), arg0, arg1)
}
