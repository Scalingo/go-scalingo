// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo/v8 (interfaces: ContainersService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockContainersService is a mock of ContainersService interface.
type MockContainersService struct {
	ctrl     *gomock.Controller
	recorder *MockContainersServiceMockRecorder
}

// MockContainersServiceMockRecorder is the mock recorder for MockContainersService.
type MockContainersServiceMockRecorder struct {
	mock *MockContainersService
}

// NewMockContainersService creates a new mock instance.
func NewMockContainersService(ctrl *gomock.Controller) *MockContainersService {
	mock := &MockContainersService{ctrl: ctrl}
	mock.recorder = &MockContainersServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainersService) EXPECT() *MockContainersServiceMockRecorder {
	return m.recorder
}

// ContainersStop mocks base method.
func (m *MockContainersService) ContainersStop(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ContainersStop", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ContainersStop indicates an expected call of ContainersStop.
func (mr *MockContainersServiceMockRecorder) ContainersStop(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ContainersStop", reflect.TypeOf((*MockContainersService)(nil).ContainersStop), arg0, arg1, arg2)
}
