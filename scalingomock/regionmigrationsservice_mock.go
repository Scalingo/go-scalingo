// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo/v7 (interfaces: RegionMigrationsService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	context "context"
	reflect "reflect"

	scalingo "github.com/Scalingo/go-scalingo/v7"
	gomock "github.com/golang/mock/gomock"
)

// MockRegionMigrationsService is a mock of RegionMigrationsService interface.
type MockRegionMigrationsService struct {
	ctrl     *gomock.Controller
	recorder *MockRegionMigrationsServiceMockRecorder
}

// MockRegionMigrationsServiceMockRecorder is the mock recorder for MockRegionMigrationsService.
type MockRegionMigrationsServiceMockRecorder struct {
	mock *MockRegionMigrationsService
}

// NewMockRegionMigrationsService creates a new mock instance.
func NewMockRegionMigrationsService(ctrl *gomock.Controller) *MockRegionMigrationsService {
	mock := &MockRegionMigrationsService{ctrl: ctrl}
	mock.recorder = &MockRegionMigrationsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegionMigrationsService) EXPECT() *MockRegionMigrationsServiceMockRecorder {
	return m.recorder
}

// CreateRegionMigration mocks base method.
func (m *MockRegionMigrationsService) CreateRegionMigration(arg0 context.Context, arg1 string, arg2 scalingo.RegionMigrationParams) (scalingo.RegionMigration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRegionMigration", arg0, arg1, arg2)
	ret0, _ := ret[0].(scalingo.RegionMigration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRegionMigration indicates an expected call of CreateRegionMigration.
func (mr *MockRegionMigrationsServiceMockRecorder) CreateRegionMigration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRegionMigration", reflect.TypeOf((*MockRegionMigrationsService)(nil).CreateRegionMigration), arg0, arg1, arg2)
}

// ListRegionMigrations mocks base method.
func (m *MockRegionMigrationsService) ListRegionMigrations(arg0 context.Context, arg1 string) ([]scalingo.RegionMigration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRegionMigrations", arg0, arg1)
	ret0, _ := ret[0].([]scalingo.RegionMigration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRegionMigrations indicates an expected call of ListRegionMigrations.
func (mr *MockRegionMigrationsServiceMockRecorder) ListRegionMigrations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRegionMigrations", reflect.TypeOf((*MockRegionMigrationsService)(nil).ListRegionMigrations), arg0, arg1)
}

// RunRegionMigrationStep mocks base method.
func (m *MockRegionMigrationsService) RunRegionMigrationStep(arg0 context.Context, arg1, arg2 string, arg3 scalingo.RegionMigrationStep) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunRegionMigrationStep", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunRegionMigrationStep indicates an expected call of RunRegionMigrationStep.
func (mr *MockRegionMigrationsServiceMockRecorder) RunRegionMigrationStep(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunRegionMigrationStep", reflect.TypeOf((*MockRegionMigrationsService)(nil).RunRegionMigrationStep), arg0, arg1, arg2, arg3)
}

// ShowRegionMigration mocks base method.
func (m *MockRegionMigrationsService) ShowRegionMigration(arg0 context.Context, arg1, arg2 string) (scalingo.RegionMigration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowRegionMigration", arg0, arg1, arg2)
	ret0, _ := ret[0].(scalingo.RegionMigration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShowRegionMigration indicates an expected call of ShowRegionMigration.
func (mr *MockRegionMigrationsServiceMockRecorder) ShowRegionMigration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowRegionMigration", reflect.TypeOf((*MockRegionMigrationsService)(nil).ShowRegionMigration), arg0, arg1, arg2)
}
